ALGORITHM cLDSp1s1
VAR
    s1,s2 : ARRAY_OF INTEGER[10];
    i,j : INTEGER;
    sum : INTEGER := 0;
    found : BOOLEAN;
BEGIN
 //P1: Given two sets of el, find sum of overlapping elements in two sets(no duplicates within a set).
  //S1: type Array: 
    //Inserting and reading elements in the two sets.
    FOR i FROM 0 TO s1.length-1 DO
      Write ('Enter set 1:', i);
      Read (s1[i]);
   END FOR   
   FOR j FROM 0 TO s2.length-1 DO
      Write ('Enter set 2:', j);
      Read (s2[j]);
   END FOR
    // Compare each el of set1 with set2 & if el is not present then add that el to sum.
    FOR i FROM 0 TO s1.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO s2.length-1 DO
            IF(s1[i] = s2[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR
        IF (NOT found) THEN
            sum := sum+s1[i];
        END_IF
    END_FOR
    //Then do the vice versa to add el from the second set. 
    FOR i FROM 0 TO s2.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO s1.length-1 DO
            IF(s2[i] = s1[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR
        IF (NOT found) THEN
            sum := sum + s2[i];
        END_IF
    END_FOR
    //Display the sum.
    Write('Sum=',sum);
END